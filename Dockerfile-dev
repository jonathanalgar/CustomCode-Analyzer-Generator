# Base image with .NET SDK installation
FROM python:3.11-slim AS python-base

# Install .NET SDK - this needs to be done before trying to use dotnet commands
# TODO: pin .NET SDK version
RUN apt-get update \
    && apt-get install -y wget libfontconfig make \
    && wget https://packages.microsoft.com/config/debian/12/packages-microsoft-prod.deb -O packages-microsoft-prod.deb \
    && dpkg -i packages-microsoft-prod.deb \
    && rm packages-microsoft-prod.deb \
    && apt-get update \
    && apt-get install -y dotnet-sdk-8.0 \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Disable .NET welcome message and telemetry
ENV DOTNET_NOLOGO=1
ENV DOTNET_CLI_TELEMETRY_OPTOUT=1
ENV DOTNET_SKIP_FIRST_TIME_EXPERIENCE=1

# Poetry configuration
ENV POETRY_VERSION=1.8.5
ENV POETRY_HOME=/opt/poetry
ENV POETRY_VENV=/opt/poetry-venv
ENV POETRY_VIRTUALENVS_CREATE=false
ENV POETRY_VIRTUALENVS_IN_PROJECT=false
ENV POETRY_NO_INTERACTION=1

# Poetry installation stage
FROM python-base AS poetry-base
RUN python -m venv "$POETRY_VENV" \
    && "$POETRY_VENV"/bin/pip install -U pip setuptools \
    && "$POETRY_VENV"/bin/pip install poetry==${POETRY_VERSION}

FROM python-base AS app

# Copy Poetry installation from poetry-base stage
COPY --from=poetry-base ${POETRY_VENV} ${POETRY_VENV}
ENV PATH="${PATH}:${POETRY_VENV}/bin"

WORKDIR /app

# Copy dependency files and Makefile
COPY pyproject.toml poetry.lock README.md Makefile ./

# Create package structure and __init__ files
RUN mkdir -p agents/evaluation \
    && touch agents/__init__.py \
    && touch agents/evaluation/__init__.py

RUN make install

RUN mkdir -p /app/output

ENV PYTHONPATH=/app
ENV PYTHONUNBUFFERED=1

CMD ["poetry", "run", "generate"]